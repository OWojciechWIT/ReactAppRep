{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wtmas\\\\Documents\\\\GitHub\\\\react-intro\\\\PizzaPal2\\\\frontend\\\\src\\\\containers\\\\YourOrders\\\\YourOrders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"../../axios-orders\";\nimport OrdersTable from \"../../components/OrdersTable/OrdersTable\";\nimport Loader from \"../../components/Feedback/Loader/Loader\";\nimport ErrorModal from \"../../components/Feedback/ErrorModal/ErrorModal\";\nimport AuthContext from \"../../context/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst YourOrders = props => {\n  _s();\n\n  const auth = useContext(AuthContext); // ORDER, ERROR AND LOADING STATE\n\n  const [pastOrdersState, setPastOrdersState] = useState({\n    orders: []\n  });\n  const [errorState, setErrorState] = useState({\n    error: false,\n    errorMessage: null\n  });\n  const [loadingState, setLoadingState] = useState({\n    isLoading: true,\n    ordersLoaded: false,\n    loadFailed: false\n  }); // FETCH ORDERS\n\n  useEffect(() => {\n    let uid = auth.userId;\n    let path = \"/orders/\" + uid;\n    axios.get(path, {\n      headers: {\n        Authorization: \"Bearer \" + auth.token\n      }\n    }).then(response => {\n      setPastOrdersState({\n        orders: response.data.orders\n      });\n      setLoadingState({\n        isLoading: false,\n        ordersLoaded: true,\n        loadFailed: loadingState.loadFailed\n      });\n    }).catch(error => {\n      setErrorState({\n        error: true,\n        errorMessage: error.response.data.message\n      });\n      setLoadingState({\n        isLoading: false,\n        ordersLoaded: loadingState.ordersLoaded,\n        loadFailed: loadingState.loadFailed\n      });\n    });\n  }, []); // ERROR HANDLER\n\n  const errorHandler = () => {\n    setErrorState({\n      error: false,\n      errorMessage: null\n    });\n    setLoadingState({\n      isLoading: loadingState.isLoading,\n      ordersLoaded: loadingState.ordersLoaded,\n      loadFailed: true\n    });\n  }; // DISPLAY ORDERS\n\n\n  let orders = errorState.error ? /*#__PURE__*/_jsxDEV(ErrorModal, {\n    error: errorState.errorMessage,\n    onClear: errorHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Loader, {\n    active: loadingState.isLoading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n\n  if (loadingState.ordersLoaded && pastOrdersState.orders.length > 0) {\n    orders = /*#__PURE__*/_jsxDEV(OrdersTable, {\n      orders: pastOrdersState.orders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 14\n    }, this);\n  } else if (loadingState.loadFailed) {\n    orders = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"We can't load your orders... maybe try creating one?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: orders\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 10\n  }, this);\n};\n\n_s(YourOrders, \"c/76bYubAfUjdwQIuSBTuqTjWK0=\");\n\n_c = YourOrders;\nexport default YourOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"YourOrders\");","map":{"version":3,"sources":["C:/Users/wtmas/Documents/GitHub/react-intro/PizzaPal2/frontend/src/containers/YourOrders/YourOrders.js"],"names":["React","useState","useEffect","useContext","axios","OrdersTable","Loader","ErrorModal","AuthContext","YourOrders","props","auth","pastOrdersState","setPastOrdersState","orders","errorState","setErrorState","error","errorMessage","loadingState","setLoadingState","isLoading","ordersLoaded","loadFailed","uid","userId","path","get","headers","Authorization","token","then","response","data","catch","message","errorHandler","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nimport OrdersTable from \"../../components/OrdersTable/OrdersTable\";\r\nimport Loader from \"../../components/Feedback/Loader/Loader\";\r\nimport ErrorModal from \"../../components/Feedback/ErrorModal/ErrorModal\";\r\nimport AuthContext from \"../../context/auth-context\";\r\n\r\nconst YourOrders = (props) => {\r\n\r\n  const auth = useContext(AuthContext);\r\n\r\n  // ORDER, ERROR AND LOADING STATE\r\n\r\n  const [pastOrdersState, setPastOrdersState] = useState({\r\n    orders: [],\r\n  });\r\n\r\n  const [errorState, setErrorState] = useState({\r\n    error: false,\r\n    errorMessage: null,\r\n  });\r\n\r\n  const [loadingState, setLoadingState] = useState({\r\n    isLoading: true,\r\n    ordersLoaded: false,\r\n    loadFailed: false,\r\n  });\r\n\r\n  // FETCH ORDERS\r\n  \r\n  useEffect(() => {\r\n\r\n    let uid = auth.userId;\r\n    let path = \"/orders/\" + uid;\r\n    axios\r\n      .get(path, { headers: { Authorization: \"Bearer \" + auth.token }})\r\n      .then((response) => {\r\n        setPastOrdersState({ orders: response.data.orders });\r\n        setLoadingState({\r\n          isLoading: false,\r\n          ordersLoaded: true,\r\n          loadFailed: loadingState.loadFailed,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setErrorState({\r\n          error: true,\r\n          errorMessage: error.response.data.message,\r\n        });\r\n        setLoadingState({\r\n          isLoading: false,\r\n          ordersLoaded: loadingState.ordersLoaded,\r\n          loadFailed: loadingState.loadFailed,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  // ERROR HANDLER\r\n\r\n  const errorHandler = () => {\r\n    setErrorState({\r\n      error: false,\r\n      errorMessage: null,\r\n    });\r\n    setLoadingState({\r\n      isLoading: loadingState.isLoading,\r\n      ordersLoaded: loadingState.ordersLoaded,\r\n      loadFailed: true,\r\n    });\r\n  };\r\n\r\n  // DISPLAY ORDERS\r\n\r\n  let orders = errorState.error ? (\r\n    <ErrorModal error={errorState.errorMessage} onClear={errorHandler} />\r\n  ) : (\r\n    <Loader active={loadingState.isLoading} />\r\n  );\r\n\r\n  if (loadingState.ordersLoaded && pastOrdersState.orders.length > 0) {\r\n    orders = <OrdersTable orders={pastOrdersState.orders} />;\r\n  } else if (loadingState.loadFailed) {\r\n    orders = <p>We can't load your orders... maybe try creating one?</p>;\r\n  }\r\n\r\n  return <div>{orders}</div>;\r\n};\r\n\r\nexport default YourOrders;\r\n"]},"metadata":{},"sourceType":"module"}