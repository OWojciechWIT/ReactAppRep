{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wtmas\\\\Documents\\\\GitHub\\\\react-intro\\\\PizzaPal2\\\\frontend\\\\src\\\\components\\\\Layout\\\\Layout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect, Suspense } from \"react\";\nimport Loader from '../Feedback/Loader/Loader';\nimport { Container } from \"semantic-ui-react\";\nimport { Route, useHistory, Switch } from \"react-router-dom\";\nimport \"./Layout.css\";\nimport Nav from \"../Nav/Nav\";\nimport PizzaPal from \"../../containers/PizzaPal/PizzaPal\";\n/* import YourOrders from \"../../containers/YourOrders/YourOrders\";\r\nimport PlaceOrder from \"../../containers/PlaceOrder/PlaceOrder\";\r\nimport OrderSuccess from \"../../containers/PlaceOrder/OrderSuccess/OrderSuccess\";\r\nimport Authenticate from \"../../containers/Authenticate/Authenticate\";\r\nimport YourAccount from \"../../containers/YourAccount/YourAccount\";\r\nimport AccountUpdate from \"../../containers/YourAccount/AccountUpdate/AccountUpdate\"; */\n\nimport AuthContext from \"../../context/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YourOrders = /*#__PURE__*/React.lazy(_c = () => import(\"../../containers/YourOrders/YourOrders\"));\n_c2 = YourOrders;\nconst PlaceOrder = /*#__PURE__*/React.lazy(_c3 = () => import(\"../../containers/PlaceOrder/PlaceOrder\"));\n_c4 = PlaceOrder;\nconst OrderSuccess = /*#__PURE__*/React.lazy(_c5 = () => import(\"../../containers/PlaceOrder/OrderSuccess/OrderSuccess\"));\n_c6 = OrderSuccess;\nconst Authenticate = /*#__PURE__*/React.lazy(_c7 = () => import(\"../../containers/Authenticate/Authenticate\"));\n_c8 = Authenticate;\nconst YourAccount = /*#__PURE__*/React.lazy(_c9 = () => import(\"../../containers/YourAccount/YourAccount\"));\n_c10 = YourAccount;\nconst AccountUpdate = /*#__PURE__*/React.lazy(_c11 = () => import(\"../../containers/YourAccount/AccountUpdate/AccountUpdate\"));\n_c12 = AccountUpdate;\nlet logoutTimer;\n\nconst Layout = props => {\n  _s();\n\n  const [token, setToken] = useState(false);\n  const [userId, setUserId] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const history = useHistory();\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\"userData\", JSON.stringify({\n      userId: uid,\n      token: token,\n      expiration: tokenExpirationDate.toISOString()\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem(\"userData\");\n    history.push(\"/\");\n  }, []);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n  let routes;\n\n  if (token) {\n    routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: PizzaPal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/orders/:uid\",\n        component: YourOrders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/place-order\",\n        component: PlaceOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/order-success\",\n        component: OrderSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users/:uid\",\n        component: YourAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/update-account\",\n        component: AccountUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  } else {\n    routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: PizzaPal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/authenticate\",\n        component: Authenticate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: !!token,\n      token: token,\n      userId: userId,\n      login: login,\n      logout: logout\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Loader, {\n            active: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this),\n        children: routes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Layout, \"n3UH1+2gfa1KXBpKXj2IdSdqiZs=\", false, function () {\n  return [useHistory];\n});\n\n_c13 = Layout;\nexport default Layout;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n\n$RefreshReg$(_c, \"YourOrders$React.lazy\");\n$RefreshReg$(_c2, \"YourOrders\");\n$RefreshReg$(_c3, \"PlaceOrder$React.lazy\");\n$RefreshReg$(_c4, \"PlaceOrder\");\n$RefreshReg$(_c5, \"OrderSuccess$React.lazy\");\n$RefreshReg$(_c6, \"OrderSuccess\");\n$RefreshReg$(_c7, \"Authenticate$React.lazy\");\n$RefreshReg$(_c8, \"Authenticate\");\n$RefreshReg$(_c9, \"YourAccount$React.lazy\");\n$RefreshReg$(_c10, \"YourAccount\");\n$RefreshReg$(_c11, \"AccountUpdate$React.lazy\");\n$RefreshReg$(_c12, \"AccountUpdate\");\n$RefreshReg$(_c13, \"Layout\");","map":{"version":3,"sources":["C:/Users/wtmas/Documents/GitHub/react-intro/PizzaPal2/frontend/src/components/Layout/Layout.js"],"names":["React","useState","useCallback","useEffect","Suspense","Loader","Container","Route","useHistory","Switch","Nav","PizzaPal","AuthContext","YourOrders","lazy","PlaceOrder","OrderSuccess","Authenticate","YourAccount","AccountUpdate","logoutTimer","Layout","props","token","setToken","userId","setUserId","tokenExpirationDate","setTokenExpirationDate","history","login","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","logout","removeItem","push","storedData","parse","getItem","remainingTime","setTimeout","clearTimeout","routes","isLoggedIn"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect, Suspense } from \"react\";\r\nimport Loader from '../Feedback/Loader/Loader';\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { Route, useHistory, Switch } from \"react-router-dom\";\r\n\r\nimport \"./Layout.css\";\r\n\r\nimport Nav from \"../Nav/Nav\";\r\nimport PizzaPal from \"../../containers/PizzaPal/PizzaPal\";\r\n/* import YourOrders from \"../../containers/YourOrders/YourOrders\";\r\nimport PlaceOrder from \"../../containers/PlaceOrder/PlaceOrder\";\r\nimport OrderSuccess from \"../../containers/PlaceOrder/OrderSuccess/OrderSuccess\";\r\nimport Authenticate from \"../../containers/Authenticate/Authenticate\";\r\nimport YourAccount from \"../../containers/YourAccount/YourAccount\";\r\nimport AccountUpdate from \"../../containers/YourAccount/AccountUpdate/AccountUpdate\"; */\r\nimport AuthContext from \"../../context/auth-context\";\r\n\r\n\r\nconst YourOrders = React.lazy(() => import(\"../../containers/YourOrders/YourOrders\"));\r\nconst PlaceOrder = React.lazy(() => import(\"../../containers/PlaceOrder/PlaceOrder\"));\r\nconst OrderSuccess = React.lazy(() => import(\"../../containers/PlaceOrder/OrderSuccess/OrderSuccess\"));\r\nconst Authenticate = React.lazy(() => import(\"../../containers/Authenticate/Authenticate\"));\r\nconst YourAccount = React.lazy(() => import(\"../../containers/YourAccount/YourAccount\"));\r\nconst AccountUpdate = React.lazy(() => import(\"../../containers/YourAccount/AccountUpdate/AccountUpdate\"));\r\n\r\n\r\nlet logoutTimer;\r\n\r\nconst Layout = (props) => {\r\n\r\n  const [token, setToken] = useState(false);\r\n  const [userId, setUserId] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpirationDate.toISOString()\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(\"userData\");\r\n    history.push(\"/\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if ( storedData && storedData.token && new Date(storedData.expiration) > new Date() ) {\r\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n    }\r\n  }, [login]);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  let routes;\r\n  if (token) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={PizzaPal} />\r\n        <Route path=\"/orders/:uid\" component={YourOrders} />\r\n        <Route path=\"/place-order\" component={PlaceOrder} />\r\n        <Route path=\"/order-success\" component={OrderSuccess} />\r\n        <Route path=\"/users/:uid\" component={YourAccount} />\r\n        <Route path=\"/update-account\" component={AccountUpdate} />\r\n      </Switch>\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={PizzaPal} />\r\n        <Route path=\"/authenticate\" component={Authenticate} />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value = {{\r\n        isLoggedIn: !!token,\r\n        token: token,\r\n        userId: userId,\r\n        login: login,\r\n        logout: logout\r\n      }}\r\n    >\r\n      <Container>\r\n        <Nav />\r\n        <Suspense fallback={<div><Loader active='true' /></div>}>\r\n    {routes}\r\n</Suspense>\r\n      </Container>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"]},"metadata":{},"sourceType":"module"}